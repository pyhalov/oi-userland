--- mozilla/xpcom/threads/nsThreadManager.cpp.1	2016-09-27 12:45:17.422498701 +0300
+++ mozilla/xpcom/threads/nsThreadManager.cpp	2016-09-27 12:48:02.398875273 +0300
@@ -29,13 +29,19 @@
 void
 NS_SetMainThread()
 {
+  printf("In NS_SetMainThread\n");
   if (!sTLSIsMainThread.initialized()) {
+    printf("not initialized\n");
     if (!sTLSIsMainThread.init()) {
+      printf("Couldn't run sTLSIsMainThread.init()\n");
       MOZ_CRASH();
     }
     sTLSIsMainThread.set(true);
+    printf("Set main trhread");
   }
+  printf("Before MOZ_ASSERT(NS_IsMainThread())==%d\n",NS_IsMainThread());
   MOZ_ASSERT(NS_IsMainThread());
+  printf("Survived MOZ_ASSERT\n");
 }
 
 typedef nsTArray<RefPtr<nsThread>> nsThreadArray;
--- mozilla/xpcom/base/nsTraceRefcnt.cpp.1	2016-09-27 13:24:17.920483099 +0300
+++ mozilla/xpcom/base/nsTraceRefcnt.cpp	2016-09-27 13:25:27.301214237 +0300
@@ -983,7 +983,9 @@
 EXPORT_XPCOM_API(void)
 NS_LogInit()
 {
+  NS_WARNING("In NS_LogInit before NS_SetMainThread()");
   NS_SetMainThread();
+  NS_WARNING("In NS_LogInit after NS_SetMainThread()");
 
   // FIXME: This is called multiple times, we should probably not allow that.
 #ifdef MOZ_STACKWALKING
